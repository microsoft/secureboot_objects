# This workflow validates the Make2023BootableMedia.ps1 script for spelling corrections
# and ensures no adverse effects are introduced by changes to the script.
#
# It runs comprehensive static analysis tests including:
# - PowerShell syntax validation
# - Variable consistency checks
# - Function definition integrity  
# - Parameter block validation
# - Critical variable usage validation
# - Spelling correction verification
#
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: BSD-2-Clause-Patent

name: Validate Make2023BootableMedia.ps1

on:
  pull_request:
    paths:
      - 'scripts/windows/Make2023BootableMedia.ps1'
    branches: [ "main" ]
  push:
    paths:
      - 'scripts/windows/Make2023BootableMedia.ps1'
    branches: [ "main" ]

jobs:
  validate-script:
    name: Validate PowerShell Script
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run PowerShell validation tests
      shell: pwsh
      run: |
        Write-Host "Running validation tests for Make2023BootableMedia.ps1..." -ForegroundColor Cyan
        
        # Run the test script
        $testScript = "scripts/test_Make2023BootableMedia_spelling.ps1"
        $scriptToTest = "scripts/windows/Make2023BootableMedia.ps1"
        
        if (-not (Test-Path $testScript)) {
          Write-Host "‚ùå Test script not found at $testScript" -ForegroundColor Red
          exit 1
        }
        
        if (-not (Test-Path $scriptToTest)) {
          Write-Host "‚ùå Target script not found at $scriptToTest" -ForegroundColor Red
          exit 1
        }
        
        Write-Host "‚úÖ Found test script: $testScript" -ForegroundColor Green
        Write-Host "‚úÖ Found target script: $scriptToTest" -ForegroundColor Green
        
        # Execute the validation tests
        & $testScript -ScriptPath $scriptToTest
        $exitCode = $LASTEXITCODE
        
        if ($exitCode -eq 0) {
          Write-Host "üéâ All validation tests passed!" -ForegroundColor Green
        } else {
          Write-Host "‚ùå Validation tests failed with exit code: $exitCode" -ForegroundColor Red
          exit $exitCode
        }
        
    - name: Report test results
      if: always()
      shell: pwsh
      run: |
        if ($LASTEXITCODE -eq 0) {
          Write-Host "::notice title=Validation Complete::All PowerShell validation tests passed successfully"
        } else {
          Write-Host "::error title=Validation Failed::PowerShell validation tests failed. Please review the script changes."
        }
